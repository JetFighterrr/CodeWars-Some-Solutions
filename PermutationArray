/**
 * @param {number[]} nums
 * @return {number[][]}
 */
var permute = function(nums) {
    let result = [[nums[0]]];
    let temp;
    for(let i = 1; i< nums.length; i++){
      for (let j = 0; j < result.length; j++){
           result[j] = secondLevel(result[j], nums[i]);
      }
      result = result.reduce((acc, el) => acc.concat(el), []);
    }
  return result;
};

function secondLevel(nums, num){
  let result = [];
  for(let i = 0; i<= nums.length; i++){
    result.push(firstLevel(nums, num, i));
  }
  return result;
}

function firstLevel(nums, num, i){
    return [...nums.slice(0,i), num, ...nums.slice(i)];
}
